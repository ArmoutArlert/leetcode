class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
	int n = triangle.size();
	if (n == 0) {return 0;}
    if (n == 1) {return triangle[0][0];}
	vector<vector<int>> dp;
	for (int i = 0; i < n; i++) {
		// 临时
		vector<int> temp;
		if (i == 0) {
			temp.push_back(triangle[0][0]);
		}
		else {
			for (int j = 0; j < i + 1; j++) {
				if (j == 0) {
					temp.push_back(dp[i - 1][0] + triangle[i][j]);
				}
				else if (j == i) {
					temp.push_back(dp[i - 1][j - 1] + triangle[i][j]);
				}
				else {
					temp.push_back(min(dp[i - 1][j], dp[i - 1][j - 1]) + triangle[i][j]);
				}
			}
		}
		dp.push_back(temp);
	}
	int minval = INT_MAX;
	for (int j = 0; j < n; j++) {
		minval = min(minval, dp[n - 1][j]);
	}
	return minval;
}
};
