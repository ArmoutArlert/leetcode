/*
// 这种方法没啥难的，基本思路
// 打破双重循环，可以设立flag标志位，也直接return
class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if(strs.size()==0) return "";
        int i=0;
        bool flag=true;
        while(i<strs[0].size()){
           for(int j=1;j<strs.size();j++){
               if(i>=strs[j].size()|| strs[j][i]!=strs[0][i]){
                   flag=false;
                   break;
               }
           }
           if(flag==false) break;
           i++;
        }
        string sol(strs[0].begin(),strs[0].begin()+i);
        return sol;
    }
}; */

// 更改过后的版本，简单易懂
class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if(strs.size()==0) return "";
        int i=0;
    
        while(i<strs[0].size()){
           for(int j=1;j<strs.size();j++){
               if(i>=strs[j].size()|| strs[j][i]!=strs[0][i]){
                 return string(strs[0].begin(),strs[0].begin()+i); 
                // return strs[0].substr(0, i);
                // 从0开始截取i个数的长度，其实不包含0+i
                }     
            }
            i++;
        }
       return strs[0];
    }
};
