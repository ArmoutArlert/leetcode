/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    vector<TreeNode*> trace(int l ,int r){
        vector<TreeNode*> rootTree;
        if(l>r){
            return {nullptr};  // 注意这样写是可以的，但是不可以写return rootTree,因为里面没有元素，而不是元素为nullptr
        }    
        vector<TreeNode*> leftTree;
        vector<TreeNode*> rightTree;
        for(int cur=l;cur<=r;cur++){
            leftTree = trace(l,cur-1);
            rightTree = trace(cur+1,r);
        
            for(int i = 0;i<leftTree.size();i++){
                for(int j=0;j<rightTree.size();j++){
                    TreeNode* root = new TreeNode(cur);
                    root->left = leftTree[i];
                    root->right = rightTree[j];
                    rootTree.push_back(root);
                }
            }
        }
        return rootTree;
    }

    vector<TreeNode*> generateTrees(int n) {
       if(n==0){
           return{};
       }
        return trace(1,n);
    }
};
