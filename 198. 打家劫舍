
// 使用的是dp而不是贪心，dp细化到数组每一个的套路
class Solution {
public:
    int rob(vector<int>& nums) {
        int n =nums.size();
        if(n==0) return 0;
        if(n==1) return nums[0];
        // 经过验证，这行可以省略
        // if(n==2) return max(nums[0],nums[1]);
        vector<int> dp(n);
        dp[0]=nums[0];
        dp[1] = max(nums[0],nums[1]);
        int i=2;
        while(i<n){
            dp[i] = max(dp[i-2]+nums[i],dp[i-1]);
            i++;
        }
        return dp[i-1];
    }
};
