/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:


    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        if(l1 == nullptr){return l2;}
        if(l2 == nullptr){return l1;}
        
        ListNode* pre = new ListNode(-1);
        ListNode* newHead = pre;
        ListNode* cur = l1;
        pre->next = l1;
        ListNode* p2 = l2;

        while(cur!=nullptr && p2!=nullptr){
            if(p2->val <= cur->val){
               ListNode* temp2 = p2->next;
               p2->next = cur; 
               pre->next = p2;
               pre = p2;
               p2 = temp2;
            }else{
                pre = cur;
                cur = cur->next;
                
            }
            if(cur == nullptr){
                pre->next = p2;
            }
        }
        return newHead->next;
    }
};
