/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 /*
class Solution {
public:
    vector<int> vec;
    vector<int> postorderTraversal(TreeNode* root) {
        if(root == nullptr){
            return vec;
        }
        postorderTraversal(root->left);
        postorderTraversal(root->right);
        vec.push_back(root->val);
        return vec;
    }
};  */


// 非递归版本
class Solution {
public:
    
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> vec;
        if(root == nullptr){
            return vec;
        }
        stack<TreeNode*> stk1;
        stk1.push(root);
        while(!stk1.empty()){
            TreeNode* head = stk1.top();
            stk1.pop();
            vec.push_back(head->val);
            if(head->left){stk1.push(head->left);}
            if(head->right){stk1.push(head->right);}
        }
        reverse(vec.begin(),vec.end());
        return vec;
    }
};
