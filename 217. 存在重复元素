//简单题，要么排序要么哈希表
// 使用count函数
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_set<int> hashset;
        for(auto ele:nums){
            if(hashset.count(ele)==0){
                hashset.emplace(ele);
            }
            else return true;
        }
        return false;
    }
};


/*
// 使用find()函数，返回迭代器
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_set<int> hashset;
        for(auto ele:nums){
            if(hashset.find(ele)==hashset.end()){
                hashset.emplace(ele);
            }
            else return true;
        }
        return false;
    }
}; */
